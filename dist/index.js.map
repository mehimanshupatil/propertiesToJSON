{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["// @ts-nocheck\nconst defaultValue = (v: any, d: any) => (v === undefined ? d : v);\n\nconst typesMap = {\n    false: false,\n    true: true,\n    undefined: undefined,\n    null: null,\n};\n\nconst defaults = {\n    jsonAsString: false,\n    convertToJsonTree: false,\n    parseNumber: false,\n    parseBooleanNullUndefined: false,\n};\n\nfunction isNumeric(value: string | number): boolean {\n    return value != null && value !== '' && !isNaN(Number(value.toString()));\n}\n\nconst propertiesToJSON = (str: string, options = defaults) => {\n    const parsedOptions = {\n        jsonAsString: defaultValue(options.jsonAsString, defaults.jsonAsString),\n        convertToJsonTree: defaultValue(options.convertToJsonTree, defaults.convertToJsonTree),\n        parseNumber: defaultValue(options.parseNumber, defaults.parseNumber),\n        parseBooleanNullUndefined: defaultValue(options.parseBooleanNullUndefined, defaults.parseBooleanNullUndefined),\n    };\n    const jsonObj = str\n        // Concat lines that end with '\\'.\n        .replace(/\\\\\\n( )*/g, '')\n        // Split by line breaks.\n        .split('\\n')\n        // Remove commented lines:\n        .filter((line) => (/(\\#|\\!)/.test(line.replace(/\\s/g, '').slice(0, 1)) ? false : line))\n        // Create the JSON:\n        .reduce((obj, line) => {\n            // Replace only '=' that are not escaped with '\\' to handle separator inside key\n            const colonifiedLine = line.replace(/(?<!\\\\)=/, ':');\n            const key = colonifiedLine\n                // Extract key from index 0 to first not escaped colon index\n                .substring(0, colonifiedLine.search(/(?<!\\\\):/))\n                // Remove not needed backslash from key\n                .replace(/\\\\/g, '')\n                .trim();\n\n            let value = colonifiedLine.substring(colonifiedLine.search(/(?<!\\\\):/) + 1).trim() as string | number;\n\n            if (parsedOptions.parseNumber && isNumeric(value)) {\n                value = +value;\n            } else if (parsedOptions.parseBooleanNullUndefined) {\n                // @ts-ignore\n                value = value in typesMap ? typesMap[value] : value;\n            }\n\n            if (!parsedOptions.convertToJsonTree) {\n                // @ts-ignore\n                obj[key] = value;\n                return obj;\n            }\n\n            const keys = key.split('.');\n            return treeCreationRecursiveFn(keys, value, obj);\n        }, {});\n\n    if (parsedOptions.jsonAsString) return JSON.stringify(jsonObj);\n    return jsonObj;\n};\n\nconst treeCreationRecursiveFn = function (keys: string[], value: string | number, result: object) {\n    let key = keys[0];\n\n    key = key.replace(/\\[\\d*?\\]/g, '');\n\n    if (keys.length === 1) {\n        if (\n            result[key] &&\n            result[key].constructor === Object &&\n            (typeof value === 'string' || typeof value === 'number')\n        ) {\n            console.warn(`key missing for value ->`, value);\n            console.warn('The value will have empty string as a key'); // @ts-ignore\n            result[key][''] = value; // @ts-ignore\n        } else {\n            result[key] = value;\n        }\n    } else {\n        let obj = {};\n\n        if (result[key] && result[key].constructor === Object)\n            // @ts-ignore\n            obj = result[key];\n        // @ts-ignore\n        else if (typeof result[key] === 'string' || typeof result[key] === 'number') {\n            // conflicting case: a=b \\n a.c=d then o/p will be a: { '': 'b', c: 'd' }\n            // @ts-ignore\n            obj = { '': result[key] }; // @ts-ignore\n            console.warn(`key missing for value ->`, result[key]);\n            console.warn('The value will have empty string as a key');\n        }\n        // @ts-ignore\n        result[key] = treeCreationRecursiveFn(keys.slice(1), value, obj);\n    }\n    return result;\n};\n\nexport default propertiesToJSON;\n"],"names":[],"mappings":"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"}